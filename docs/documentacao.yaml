openapi: 3.0.3

info:
  title: API - Senai
  description: API desenvolvida para teste no Senai
  version: 1.0.1

servers:
  - url: http://localhost:8080/v1
    description: Servidor local

paths:
  /logar:
    post:
      summary: Autentica o usuário e retorna a lista de produtos.
      description: Realiza o login com email e senha e, se bem-sucedido, retorna a lista de produtos.
      parameters:
        - name: email
          in: query
          description: O email cadastrado do usuário
          required: true
          schema:
            type: string
        - name: senha
          in: query
          description: A senha cadastrada do usuário
          required: true
          schema:
            type: string
      responses:
        '406':
          description: Email ou senha não enviados
        '404':
          description: Cliente não encontrado
        '401':
          description: Email ou senha incorretos
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  produtos:
                    type: array
                    items:
                      type: object

  /produto:
    get:
      summary: Retorna lista de todos os produtos.
      operationId: getlist
      responses:
        '200':
          description: Lista de produtos retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  db:
                    type: object
                    properties:
                      produtos:
                        type: array
                        items:
                          type: object
        '500':
          description: Erro no servidor

  /produto/{id}:
    get:
      summary: Retorna um produto por ID.
      operationId: getId
      parameters:
        - name: id
          in: query
          description: O ID do produto
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produto retornado com sucesso
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Produto não encontrado ou ID não fornecido
        '500':
          description: Erro no servidor

  /produto/write:
    post:
      summary: Adiciona um produto à lista.
      operationId: writeProdutos
      requestBody:
        description: Dados do produto a ser adicionado
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                preco:
                  type: number
                descricao:
                  type: string
      responses:
        '201':
          description: Produto criado com sucesso
        '400':
          description: Dados do produto não fornecidos
        '500':
          description: Erro no servidor

  /produto/delete:
    delete:
      summary: Deletar um produto por ID.
      operationId: deleteProduto
      parameters:
        - name: delete
          in: query
          description: O ID do produto a ser deletado
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produto deletado com sucesso
        '400':
          description: ID não fornecido
        '404':
          description: Produto não encontrado
        '500':
          description: Erro no servidor

  /produto/update:
    put:
      summary: Atualizar um produto.
      operationId: update
      parameters:
        - name: id
          in: query
          description: O ID do produto a ser atualizado
          required: true
          schema:
            type: integer
      requestBody:
        description: Dados do produto a serem atualizados
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                preco:
                  type: number
                descricao:
                  type: string
      responses:
        '200':
          description: Produto atualizado com sucesso
        '400':
          description: ID ou dados do produto não fornecidos
        '404':
          description: Produto não encontrado
        '500':
          description: Erro no servidor
